/// ╔═══════════════════════════════╗
/// ║ 	Supertrend RSI				║
/// ║ 	@	Ultr.					║
/// ╚═══════════════════════════════╝

//@version=5
indicator("Supertrended RSI [Allen]", overlay = false, timeframe = "")

//// ───────────────────────
/// ─── Supertrend Rsi
/// ─── Colors ───────
//// ───────────────────────

/// ─── Standard ──
	// color.aqua								= #00BCD4
	// color.blue								= #2196F3
	// color.teal								= #00897B
	// color.green								= #4CAF50
	// color.olive								= #808000
	// color.lime								= #00E676
	// color.yellow								= #FFEB3B
	// color.orange								= #FF9800
	// color.maroon								= #880E4F
	// color.red								= #FF5252
	// color.fuchsia							= #E040FB
	// color.purple								= #9C27B0
	// color.navy								= #311B92
	// color.black								= #363A45
	// color.gray								= #787B86
	// color.silver								= #B2B5BE
	// color.white								= #FFFFFF

/// ─── Ameritrade ───
	// AmeTrWhite								= #FFFFFF								// AmeritradeWhite
	// AmeTrGrayPlatinum						= #F7F7F7								// AmeritradeGrayPlatinum
AmeTrGrayNickel							= #F1F1F1								// AmeritradeGrayNickel
	// AmeTrGrayNickelDark20					= #C0C0C0								// AmeritradeGrayNickelDark20
	// AmeTrGrayAluminum						= #E6E7E9								// AmeritradeGrayAluminum
	// AmeTrGrayAsh								= #D8D8D8								// AmeritradeGrayAsh
	// AmeTrGrayStone							= #999999								// AmeritradeGrayStone
	// AmeTrGrayIron							= #666666								// AmeritradeGrayIron
	// AmeTrGrayCharcoal						= #333333								// AmeritradeGrayCharcoal
	// AmeTrBlack								= #000000								// AmeritradeBlack
	// AmeTrGreenCabbage						= #EBF6E9								// AmeritradeGreenCabbage
	// AmeTrGreenVerdeLight70					= #B4D6B2								// AmeritradeGreenVerdeLight70
	// AmeTrGreenVerdeLight50					= #83BC7F								// AmeritradeGreenVerdeLight50
	// AmeTrGreenVerdeNat						= #40a829								// AmeritradeGreenVerdeNat
	// AmeTrGreenVerdeLight20					= #399333								// AmeritradeGreenVerdeLight20
	// AmeTrGreenVerde							= #087900								// AmeritradeGreenVerde
	// AmeTrGreenVerdeDark20					= #066000								// AmeritradeGreenVerdeDark20
	// AmeTrGreenMoss							= #BEE7D3								// AmeritradeGreenMoss
	// AmeTrGreenMint							= #6DC4BC								// AmeritradeGreenMint
	// AmeTrGreenPine							= #38635A								// AmeritradeGreenPine
	// AmeTrRedRose								= #FAD1CF								// AmeritradeRedRose
	// AmeTrRedRojaLight50						= #E08988								// AmeritradeRedRojaLight50
	// AmeTrRedRojaLight20						= #CD4241								// AmeritradeRedRojaLight20
	// AmeTrRedRoja								= #C11312								// AmeritradeRedRoja
	// AmeTrRedRojaDark20						= #940F0E								// AmeritradeRedRojaDark20
	// AmeTrorangePeach							= #FCE7CA								// AmeritradeorangePeach
	// AmeTrorangeCarrot						= #ED8902								// AmeritradeorangeCarrot
	// AmeTrorangeYam							= #BD5310								// AmeritradeorangeYam
	// AmeTrblueFrost							= #E1EEF9								// AmeritradeblueFrost
	// AmeTrblueLagoon							= #316486								// AmeritradeblueLagoon
	// AmeTrblueNavy							= #2A5673								// AmeritradeblueNavy
	// AmeTrblueNcean							= #64A1C6								// AmeritradeblueNcean
	// AmeTrpurpleEggPlant						= #732181								// AmeritradepurpleEggPlant

/// ─── Axi ───
	// AxiPrimary								= #fc404d								// AxiPrimary
	// AxiSecondary								= #282424								// AxiSecondary
	// AxiAccent								= #61ce70								// AxiAccent
	// Axi7a46f22								= #d11c36								// Axi7a46f22
	// Axi1519066c								= #fc404d								// Axi1519066c
	// Axi3d4fa1a1								= #f0ebe3								// Axi3d4fa1a1
	// Axi638b46c1								= #fcd758								// Axi638b46c1
	// Axid07bac9								= #f9b4a8								// Axid07bac9
	// Axie63a114								= #2c4d5a								// Axie63a114
	// Axi8bf0845								= #a4d866								// Axi8bf0845
	// Axi75c6da1								= #282424								// Axi75c6da1
	// Axi378280f								= #45c2c7								// Axi378280f
	// Axi4de92c5								= #6caddf								// Axi4de92c5
Axi413dab8			   					= #00275D					            // Axi413dab8
	// Axib3fab89								= #55165c								// Axib3fab89
	// Axi548138f								= #45c2c7								// Axi548138f
	// Axi5ed9920								= #ea1616								// Axi5ed9920
	// Axi70f7335								= #dd0606								// Axi70f7335

/// ─── GrayScale ───
	// GraySFocus								= #2d7aed								// GrayScaleFocus
	// GraySWhite								= #fff									// GrayScaleWhite
	// GraySBlack								= #000									// GrayScaleBlack
	// GraySPrimaryBlackberry					= #2e234b								// GrayScalePrimaryBlackberry
	// GraySPrimaryBlackberry40					= rgba(46, 35, 75, .4))			    	// GrayScalePrimaryBlackberry40
	// GraySPrimaryBlackberry65					= rgba(46, 35, 75, .65))				// GrayScalePrimaryBlackberry65
	// GraySPrimaryCoral						= #ffb198								// GrayScalePrimaryCoral
	// GraySSecondaryForestGreen				= #244024								// GrayScaleSecondaryForestGreen
	// GraySSecondaryKeyLime					= #b5ce6f								// GrayScaleSecondaryKeyLime
	// GraySSecondaryLavender					= #c5bfe4								// GrayScaleSecondaryLavender
	// GraySSecondaryLavender40					= rgba(197, 191, 228, .4))				// GrayScaleSecondaryLavender40
	// GraySsecondaryLavender60					= rgba(197, 191, 228, .6))				// GrayScalesecondaryLavender60
	// GrayShoverWhite							= #c0bdc9								// GrayScalehoverWhite
	// GrayShoverBlackberry						= #42326b								// GrayScalehoverBlackberry
	// GraySdisabledBlackberry					= #4d4466								// GrayScaledisabledBlackberry
	// GraySactiveBlackberry					= #4d4466								// GrayScaleactiveBlackberry
	// GrayShoverCcoral							= #ffcdbd								// GrayScalehoverCcoral
	// GraySactiveCcoral						= #ff9e80								// GrayScaleactiveCcoral
	// GrayShoverGray							= #827b93								// GrayScalehoverGray
	// GrayShoverGray2							= #6d6581								// GrayScalehoverGray2
	// GraySgrayCharcoal						= #282525								// GrayScalegrayCharcoal
	// GraySgrayCharcoal70						= rgba(40, 37, 37, .7))			    	// GrayScalegrayCharcoal70
	// GraySgrayCharcoal80						= rgba(40, 37, 37, .8))			    	// GrayScalegrayCharcoal80
	// GraySgrayLight							= #f5f5f5								// GrayScalegrayLight
	// GraySgrayMedium							= #eee									// GrayScalegrayMedium
	// GraySgray70								= #696666								// GrayScalegray70
	// GraySgrayDark							= #c1c1c1								// GrayScalegrayDark
	// GraySwebSeasalt		   					= #FAFAFC								// GrayScalewebSeasalt
	// GraySwebDivider							= #e9e7f1								// GrayScalewebDivider
	// GraySwebBackground						= #f3f2fa								// GrayScalewebBackground
	// GraySwebSecondaryText					= #77708a								// GrayScalewebSecondaryText
	// GraySwebStroke							= #d3ceeb								// GrayScalewebStroke
	// GraySwebErrors							= #e00000								// GrayScalewebErrors
	// GraySwebService							= #2d7aed								// GrayScalewebService

/// ─── Interactive ───
	// IntAcPrimary3							= hsla(355, 85%, 46%, 0.03)		    	// InteractivePrimary3
	// IntAcPrimary5							= hsla(355, 85%, 46%, 0.05)		    	// InteractivePrimary5
	// IntAcPrimary10							= hsla(355, 85%, 46%, 0.10)		    	// InteractivePrimary10
	// IntAcPrimary20							= hsla(355, 85%, 46%, 0.20)		    	// InteractivePrimary20
	// IntAcPrimary30							= hsla(355, 85%, 46%, 0.30)		    	// InteractivePrimary30
	// IntAcPrimary40							= hsla(355, 85%, 46%, 0.40)		    	// InteractivePrimary40
	// IntAcPrimary50							= hsla(355, 85%, 46%, 0.50)		    	// InteractivePrimary50
	// IntAcPrimary60							= hsla(355, 85%, 46%, 0.60)		    	// InteractivePrimary60
	// IntAcPrimary70							= hsla(355, 85%, 46%, 0.70)		    	// InteractivePrimary70
	// IntAcPrimary80							= hsla(355, 85%, 46%, 0.80)		    	// InteractivePrimary80
	// IntAcPrimary90							= hsla(355, 85%, 46%, 0.90)		    	// InteractivePrimary90
	// IntAcPrimary								= hsla(355, 85%, 46%, 1.0)				// InteractivePrimary
	// IntAcPrimaryDark10						= hsla(355, 85%, 41%, 1.0)				// InteractivePrimaryDark10
	// IntAcPrimaryDark20						= hsla(355, 85%, 36%, 1.0)				// InteractivePrimaryDark20
	// IntAcPrimaryDark30						= hsla(355, 85%, 31%, 1.0)				// InteractivePrimaryDark30
	// IntAcPrimaryDark40						= hsla(355, 85%, 26%, 1.0)				// InteractivePrimaryDark40
	// IntAcPrimaryDark50						= hsla(355, 85%, 21%, 1.0)				// InteractivePrimaryDark50
	// IntAcSecondary3							= hsla(0, 0%, 13%, 0.03)				// InteractiveSecondary3
	// IntAcSecondary5							= hsla(0, 0%, 13%, 0.05)				// InteractiveSecondary5
	// IntAcSecondary10							= hsla(0, 0%, 13%, 0.10)				// InteractiveSecondary10
	// IntAcSecondary20							= hsla(0, 0%, 13%, 0.20)				// InteractiveSecondary20
	// IntAcSecondary30							= hsla(0, 0%, 13%, 0.30)				// InteractiveSecondary30
	// IntAcSecondary40							= hsla(0, 0%, 13%, 0.40)				// InteractiveSecondary40
	// IntAcSecondary50							= hsla(0, 0%, 13%, 0.50)				// InteractiveSecondary50
	// IntAcSecondary60							= hsla(0, 0%, 13%, 0.60)				// InteractiveSecondary60
	// IntAcSecondary70							= hsla(0, 0%, 13%, 0.70)				// InteractiveSecondary70
	// IntAcSecondary80							= hsla(0, 0%, 13%, 0.80)				// InteractiveSecondary80
	// IntAcSecondary90							= hsla(0, 0%, 13%, 0.90)				// InteractiveSecondary90
	// IntAcSecondary							= hsla(0, 0%, 13%, 1.0)			    	// InteractiveSecondary
	// IntAcSecondaryDark10						= hsla(0, 0%, 10%, 1.0)			    	// InteractiveSecondaryDark10
	// IntAcSecondaryDark20						= hsla(0, 0%, 7%, 1.0)					// InteractiveSecondaryDark20
	// IntAcSecondaryDark30						= hsla(0, 0%, 4%, 1.0)					// InteractiveSecondaryDark30
	// IntAcSecondaryDark40						= hsla(0, 0%, 1%, 1.0)					// InteractiveSecondaryDark40
	// IntAcSecondaryDark50						= hsla(0, 0%, 0%, 1.0)					// InteractiveSecondaryDark50
	// IntAcTertiary3							= hsla(202, 76%, 19%, 0.03)		    	// InteractiveTertiary3
	// IntAcTertiary5							= hsla(202, 76%, 19%, 0.05)		    	// InteractiveTertiary5
	// IntAcTertiary10							= hsla(202, 76%, 19%, 0.10)		    	// InteractiveTertiary10
	// IntAcTertiary20							= hsla(202, 76%, 19%, 0.20)		    	// InteractiveTertiary20
	// IntAcTertiary30							= hsla(202, 76%, 19%, 0.30)		    	// InteractiveTertiary30
	// IntAcTertiary40							= hsla(202, 76%, 19%, 0.40)		    	// InteractiveTertiary40
	// IntAcTertiary50							= hsla(202, 76%, 19%, 0.50)		    	// InteractiveTertiary50
	// IntAcTertiary60							= hsla(202, 76%, 19%, 0.60)		    	// InteractiveTertiary60
	// IntAcTertiary70							= hsla(202, 76%, 19%, 0.70)		    	// InteractiveTertiary70
	// IntAcTertiary80							= hsla(202, 76%, 19%, 0.80)		    	// InteractiveTertiary80
	// IntAcTertiary90							= hsla(202, 76%, 19%, 0.90)		    	// InteractiveTertiary90
	// IntAcTertiary							= hsla(202, 76%, 19%, 1.0)				// InteractiveTertiary
	// IntAcTertiaryDark10						= hsla(202, 76%, 14%, 1.0)				// InteractiveTertiaryDark10
	// IntAcTertiaryDark20						= hsla(202, 76%, 9%, 1.0)				// InteractiveTertiaryDark20
	// IntAcTertiaryDark30						= hsla(202, 76%, 4%, 1.0)				// InteractiveTertiaryDark30
	// IntAcTertiaryDark40						= hsla(202, 76%, 0%, 1.0)				// InteractiveTertiaryDark40

/// ─── Visa ───
	// VisPrimary								= #1434CB								// VisaBrandPrimary
	// VisPrimaryLight							= #3B57DE								// VisaBrandPrimaryLight
	// VisPrimaryDark							= #021E4C								// VisaBrandPrimaryDark
	// VisSecondary								= #FCC015								// VisaBrandSecondary
	// VisSecondaryLight						= #FFD700								// VisaBrandSecondaryLight
	// VisSecondaryDark							= #F7B600								// VisaBrandSecondaryDark
	// VisTertiary7								= #2C2C2C								// VisaBrandTertiary7
	// VisTertiary6								= #5C5C5C								// VisaBrandTertiary6
	// VisTertiary5								= #979797								// VisaBrandTertiary5
	// VisTertiary4								= #B9B9B9								// VisaBrandTertiary4
	// VisTertiary3								= #DEDEDE								// VisaBrandTertiary3
	// VisTertiary2								= #EEEEEE								// VisaBrandTertiary2
	// VisTertiary1								= #F7F7F7								// VisaBrandTertiary1

/// ─── Latam ───
	// LatRedBackground							= rgb(232, 17, 75)						// Latam Red Background

/// ─── Arbe Robotics ───
ARoPrimary								= #0035FF								// ArbePrimary
	// qARoPrimaryLight							= #0640FF								// ArbePrimaryLight
	// ARoSecondary		   						= #04EBFF								// ArbeSecondary

/// ─── AutoX ───
	// AxPrimary								= #2253F0								// AutoXPrimary
	// AxPrimaryLight							= #0050F9								// AutoXPrimaryLight
	// AxSecondary								= #75ebc0								// AutoXSecondary

/// ─── EEG ───
	// EEGSkyBlue30								= #01EBF9								// EEGSkyBlue30
	// EEGSkyBlue40								= #00E7FD								// EEGSkyBlue40
	// EEGFucsia40								= #FF00B1								// EEGFucsia40
	// EEGFucsia50								= #FE0CB6								// EEGFucsia50

/// ─── Bright Line ───
	// BrLiYel10								= #FBFD73								// BrightLineBackground Yellow Light
	// BrLiYel20								= #FFFD52								// BrightLine Yellow Light
	// BrLiYel30								= #FDF43C								// BrightLineB Yellow High
	// BrLiYel40								= #FEF301								// BrightLineBackground Yellow Nit
	// BrLiYel50								= #FFDB00								// BrightLineBackground Yellow Base

/// ─── TradingView ───
	// TVLightMenta50							= #00ffd5								// TradingViewMenta
	// TVLightGreen50					    	= #33ffac								// TradingViewGreenNit
	// TVBlue50									= #0034c5								// TradingViewBlue
	// TVLightYellow50							= #eedd45								// TradingViewYellow
	// TVNitRed40						   		= #e91e63								// TradingViewRedLight
	// TVLightBlueSky50							= #12cef8								// TradingViewBlueSky

/// ─── TFlab ───
	// TFlAsia			    					= #8bbcfc								// Lite TFlabAsia                        
	// TFlSydney		    					= #F0B884								// Lite TFlabSydney                      
	// TFlTokyo									= #0CC1C0								// Lite TFlabTokyo                       
	// TFlShanghai								= #ea1616								// Lite TFlabShanghai                    
	// TFlEuro									= #BBE8B5								// Lite TFlabEuro                        
	// TFlLondon								= #ACBBE8								// Lite TFlabLondon                      
	// TFlNewyork								= #C5ACE8								// Lite TFlabNewyork                     
	// TFlNYSE									= #87c2d4								// Lite TFlabNYSE                        

/// ─── Ultr ───
	// UltrBlueSky10							= #59F2E9								// UltrBlueSky10
	// UltrBlueSky20							= #39F0EA								// UltrBlueSky20
	// UltrMenta10								= #E0F9EF								// UltrMenta10
	// UltrMenta20								= #80F3EC								// UtlrMenta20
	// UltrMenta30								= #7FFFD4								// UltrMenta30
	// UltrMenta40								= #73FFCA								// UltrMenta40
	// UltrMenta50								= #9CFFD7								// UtlrMenta50
	// UltrMenta60								= #4fffc0								// UtlrMenta60
	// UltrRose20								= #FFA3E3								// UltrRose
	// UltrFucsia30								= #ff6fd3								// UltrFucsia
	// UltrLyla									= #7E57C2								// UltrLyla
	// UltrLightGray							= #787B86								// UltrLightGray
	// UltrRedNit								= #de0011								// UltrRedNit
	// UltrRed									= #db004b								// UltrRed
	// UltrBlue									= #003bde								// UltrBlue
	// UltrYellow								= #f4de1a								// UltrYellow
	// UltrSkyBlue								= #12cef8								// UltrSkyBlue
	// UltrOrange								= #ff5a00								// UltrOrange

/// ─── Allen ───
AllenSky10								= #CCF8FF								// AllenSky10
	// AllenSky20								= #80F3EC								// AllenSky20
	// AllenSky50								= #01ebf9								// AllenSky50

	// AllenMint10								= #E0F9EF								// AllenMint10
	// AllenMint20								= #9CFFD7								// AllenMint20
	// AllenMint30								= #7FFFD4								// AllenMint30
	// AllenMint40								= #73FFCA								// AllenMint40
	// AllenMint50								= #4fffc0								// AllenMint50
AllenMint60								= #33FFAC								// AllenMint60

	// AllenWine50								= #E91E63								// AllenWine50

//// ─────────────────────────────────────────────────────────────────────

colorSuperTUp					= input.color(AllenMint60,				title = "Long")
colorSuperTDown					= input.color(AllenSky10,				title = "Short")
colorSuperTBase					= input.color(ARoPrimary)
colorSuperTMa					= input.color(AmeTrGrayNickel)
colorSuperTLat					= input.color(Axi413dab8)

//// ───────────────────────
/// ─── Supertrend Rsi
/// ─── Variables ────
//// ───────────────────────

isSupertVisual					= input.bool	(defval = true,			title = "Visualizar Supertrend",	group = "RSI Settings")

relativeStrengthIndexLength		= input.int		(defval = 14,			title = "Longitud RSI",				group = "RSI Settings")
smoothingLength					= input.int		(defval = 21,			title = "Longitud RSI Suavisado",	group = "RSI Settings")
isSmoothed						= input.bool	(defval = false,		title = "Suavisado RSI",			group = "RSI Settings")

movingAverageLength				= input.int		(defval = 14,			title = "Longitud MA",				group = "MA Settings",			display = display.data_window)
movingAverageType				= input.string	(defval = "HMA",		title = "Tipo MA",					group = "MA Settings",			options = ["SMA", "HMA", "EMA", "SMMA", "WMA", "VWMA"],	display = display.data_window)
showMovingAverage				= input.bool	(defval = true,			title = "Visualizar RSI MA",		group = "MA Settings")

trendFactor						= input.float	(defval = 0.8,			title = "Factor",					group = "Super Trend Settings")
averageTrueRangeLength			= input.int		(defval = 10,			title = "Longitud ATR",				group = "Super Trend Settings")

//// ───────────────────────
/// ─── Supertrend Rsi
/// ─── Types ────────
//// ───────────────────────

type OHL
	float O = open
	float H = high
	float L = low
	float C = close
	float V = volume
	int   I = bar_index

calculateMA(source, length, type) =>
	switch type
		"SMA"	=> ta.sma	(source, length)
		"HMA"	=> ta.hma	(source, length)
		"EMA"	=> ta.ema	(source, length)
		"SMMA"	=> ta.rma	(source, length)
		"WMA"	=> ta.wma	(source, length)
		"VWMA"	=> ta.vwma	(source, length)


//// ───────────────────────
/// ─── Supertrend Rsi
/// ─── Instancias ──
//// ───────────────────────

ohl = OHL.new()

//// ───────────────────────
/// ─── Supertrend Rsi
/// ─── Funciones ────
//// ───────────────────────

/// ─── Calculo ATR
calculateATR(source, atrLength) =>
	highestHigh	= ta.highest(source, atrLength)
	lowestLow	= ta.lowest(source, atrLength)
	trueRange	= na(highestHigh[1]) ? highestHigh - lowestLow : math.max(highestHigh - lowestLow, math.abs(highestHigh - source[1]), math.abs(lowestLow - source[1]))
	ta.rma(trueRange, atrLength)

//// ───────────────────────
/// ─── Supertrend Rsi
/// ─── Math ─────────
//// ───────────────────────

/// ─── Function to calculate Supertrend
calculateSupertrend(factor, atrPeriod, source) =>
	priceSource				= source
	atr						= calculateATR(source, atrPeriod)
	upperBand				= priceSource + factor * atr
	lowerBand				= priceSource - factor * atr
	prevLowerBand			= nz(lowerBand[1])
	prevUpperBand			= nz(upperBand[1])
	lowerBand				:= lowerBand > prevLowerBand or source[1] < prevLowerBand ? lowerBand : prevLowerBand
	upperBand				:= upperBand < prevUpperBand or source[1] > prevUpperBand ? upperBand : prevUpperBand
	int trendDirection		= na
	float supertrendValue	= na
	prevSupertrend			= supertrendValue[1]
	if na(atr[1])
		trendDirection		:= 1
	else if prevSupertrend	== prevUpperBand
		trendDirection		:= source > upperBand ? -1 : 1
	else
		trendDirection		:= source < lowerBand ? 1 : -1
	supertrendValue			:= trendDirection == -1 ? lowerBand : upperBand
	[supertrendValue, trendDirection]

/// ─── Calculete Rsi ───────
rsiValue					= isSmoothed ? ta.hma(ta.rsi(ohl.C, relativeStrengthIndexLength), smoothingLength) : ta.rsi(ohl.C, relativeStrengthIndexLength)
rsiMovingAverage			= calculateMA(rsiValue, movingAverageLength, movingAverageType)

/// ─── Calculating Supertrend based on RSI values
[rsiSupertrend, trendDirection] = calculateSupertrend(trendFactor, averageTrueRangeLength, rsiValue)

//// ───────────────────────
/// ─── Supertrend Rsi
/// ─── Visual ───────
//// ───────────────────────

/// ─── Plotting ───────
supertrendPlot							= plot(rsiSupertrend,	color = trendDirection == -1 ? colorSuperTUp : colorSuperTDown,	title = "Supertrend")
rsiPlot									= plot(rsiValue,		color = color.new(color.gray, 100),		title = "RSI")

plot(75,								color = color.from_gradient(rsiValue, 65, 80, color.new(colorSuperTBase, 73),	color.new(colorSuperTDown, 0)),					title = "",		linewidth = 7,	editable = false)
plot(25,								color = color.from_gradient(rsiValue, 20, 45, color.new(colorSuperTUp, 0),		color.new(colorSuperTBase, 73)),				title = "",		linewidth = 7,	editable = false)

overboughtLine							= plot(70,	color = color.from_gradient(rsiValue, 50, 75, color.new(colorSuperTBase, 73),	color.new(colorSuperTDown, 0)),		title = "",		linewidth = 7,	editable = false)
oversoldLine							= plot(30,	color = color.from_gradient(rsiValue, 25, 50, color.new(colorSuperTUp, 0),		color.new(colorSuperTBase, 73)),	title = "",		linewidth = 7,	editable = false)

plot(rsiMovingAverage,					color = color.new(colorSuperTMa, 30),		title = "RSI MA",	display = showMovingAverage ? display.all : display.none, linewidth = 2)
plot(50,								color = color.new(colorSuperTMa, 70),		title = "Linea Media")

/// ─── Filling ───────
fill(overboughtLine, oversoldLine,		color = color.new(colorSuperTBase, 90),			title = "Zona de Sobre Compra/Sobre Venta")
fill(supertrendPlot, rsiPlot,			color = trendDirection == 1 ? color.new(colorSuperTDown, 90) : color.new(colorSuperTUp, 90),	title = "Zona de Tendencia")
fill(supertrendPlot, rsiPlot, rsiValue, rsiSupertrend, color.new(chart.bg_color, 1000),		trendDirection == 1 ? colorSuperTDown : colorSuperTUp)

/// ─── Crossover & CrossUnder
plotshape(ta.crossover(rsiSupertrend, rsiValue)		and rsiSupertrend > 70 ? 85 : na,	style = shape.triangledown,	location = location.absolute,	color = colorSuperTDown,	size = size.tiny,	title = "▼")
plotshape(ta.crossunder(rsiSupertrend, rsiValue)	and rsiSupertrend < 30 ? 15 : na,	style = shape.triangleup,	location = location.absolute,	color = colorSuperTUp,		size = size.tiny,	title = "▲")

//// ───────────────────────
/// ─── Supertrend Rsi
/// ─── Alerts ───────
//// ───────────────────────

alertcondition(ta.crossover(rsiValue, rsiSupertrend),	"RSI Bullish Supertrend")
alertcondition(ta.crossunder(rsiValue, rsiSupertrend),	"RSI Bearish Supertrend")
alertcondition(ta.crossover(rsiSupertrend, rsiValue)	and rsiSupertrend > 70,	"RSI Bullish Reversal")
alertcondition(ta.crossunder(rsiSupertrend, rsiValue)	and rsiSupertrend < 30,	"RSI Bearish Reversal")
